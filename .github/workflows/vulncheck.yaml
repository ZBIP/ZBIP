name: Vulnerability Check
on:
  workflow_dispatch:
  schedule:
    # Run every day at 11:23 UTC 
    - cron: "23 11 * * *"
permissions:
  contents: read
  issues: write
defaults:
  run:
    shell: bash
jobs:
  go-vulncheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run go vulncheck
        uses: golang/govulncheck-action@v1
        with:
           go-version-file: go.mod
           go-package: ./...
           output-file: vulncheck.log
      - name: Create Issue on Failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_TITLE="Vulnerability Check Failed - $(date +'%Y-%m-%d')"
          VULNCHECK_LOG=$(cat vulncheck.log | jq -Rsa .)
          ISSUE_BODY="The scheduled vulnerability check has failed. Please investigate the reported issues.\n\nLogs:\n\`\`\`\n$VULNCHECK_LOG\n\`\`\`"

          EXISTING_ISSUE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues?state=open" | \
            jq -r --arg TITLE "$ISSUE_TITLE" '.[] | select(.title == $TITLE) | .number')

          if [ -z "$EXISTING_ISSUE" ]; then
            curl -s -X POST \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues \
              -d "{\"title\":\"$ISSUE_TITLE\",\"body\":\"$ISSUE_BODY\"}"
            echo "New issue created: $ISSUE_TITLE"
          else
            echo "Issue already exists: #$EXISTING_ISSUE"
          fi
