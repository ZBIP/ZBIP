name: Deploy to DigitalOcean
on:
  workflow_dispatch:
  workflow_call:
defaults:
  run:
    shell: bash
env:
  TF_VAR_digitalocean_token: ${{ secrets.DIGITAL_OCEAN_APP_PLATFORM }}
  # TF_VAR_secops_key: ${{ secrets.SECOPS_KEY }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install SOPS
        run: |
          curl -LO https://github.com/getsops/sops/releases/download/v3.9.3/sops-v3.9.3.linux.amd64
          mv sops-v3.9.3.linux.amd64 /usr/local/bin/sops
          chmod +x /usr/local/bin/sops
      - name: Add PGP key
        run: |
          echo "${{ secrets.SOPS_KEY }}" | base64 -d > pgp.key
          gpg --import pgp.key
      - name: Decrypt app config
        run: |
          TF_VAR_app_config=$(sops --pgp C4E9C2ADC0B0249F558276DCC7557FB1316BDD06 -d config.json | base64 -w 0)
          echo "::add-mask::$TF_VAR_app_config" 
          echo "TF_VAR_app_config=$TF_VAR_app_config" >> "$GITHUB_ENV"
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_APP_PLATFORM }}
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.7
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        # continue-on-error: true
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Import existing app into Terraform state
        run: |
          terraform import digitalocean_app.zbip-app $(doctl apps list -o json | jq -r ".[] | select(.spec.name == \"zbip-app\") | .id")
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        # continue-on-error: true
      - name: Deploy to DigitalOcean
        run: terraform apply -replace=digitalocean_app.zbip-app -auto-approve
      
